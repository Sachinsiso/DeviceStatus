openapi: 3.0.3
info:
  title: Device Status
  description: Service Enabling Network Function API for monitoring device status. This API allows to query device roaming status and subscribe to event related to device network status (roaming but also loss of connectivity and reachability )
  termsOfService: http://swagger.io/terms/
  contact:
    email: project-email@sample.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.5.0
externalDocs:
  description: Product documentation at CAMARA
  url: https://github.com/camaraproject/
security:
#  - {}
  - oAuth2ClientCredentials: []
#  - BasicAuth: []
#  - apiKey: []
  - three_legged:
    - device-status-roaming-read
    - device-status-roaming-event
servers:
  - url: '{apiRoot}/{basePath}'
    variables:
      apiRoot:
        default: http://localhost:9091
        description: API root
      basePath:
        default: /device-status/v0
        description: Base path for the device status API
tags:
  - name: Device roaming status
    description: Operations to validate device roaming status and country information
paths:
  /subscriptions:
    post:
      tags:
        - Device Status Subscription
      summary: 'Create a device status subscription for a device'
      operationId: createSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscription'
        required: true
      responses:
        '201':
          description: Created (Successful creation of subscription)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionInfo'
        '400':
          $ref: '#/components/responses/Generic400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '409':
          $ref: '#/components/responses/Generic409'
        '500':
          $ref: '#/components/responses/Generic500'
        '503':
          $ref: '#/components/responses/Generic503'
  /notifications:
    post:
      tags:
        - Notification Callback
      summary: "Subscription notification callback"
      operationId: postNotification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notification"
            examples:
              UE_REACHABILITY:
                $ref: '#/components/examples/UE_REACHABILITY'
              ROAMING_STATUS:
                $ref: '#/components/examples/ROAMING_STATUS'  
              LOSS_OF_CONNECTIVITY:
                $ref: '#/components/examples/LOSS_OF_CONNECTIVITY'
      responses:
        '204':
          description: No Content
  /roaming:
    post:
      tags:
        - Device roaming status
      summary: 'Get the current roaming status and the country information'
      operationId: getRoamingStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRoamingStatus'
        required: true
      responses:
        '200':
          description: Contains information about current roaming status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoamingStatusResponse'
              examples:
                No-Country-Code:
                  value:
                    roaming: true
                    countryCode: 901
                    countryName: []
                Single-Country-Code:
                  value:
                    roaming: true
                    countryCode: 262
                    countryName: ["DE"]
                Multiple-Country-Codes:
                  value:
                    roaming: true
                    countryCode: 340
                    countryName: [ "BL","GF","GP","MF","MQ" ]
        '400':
          $ref: "#/components/responses/Generic400"
        '401':
          $ref: "#/components/responses/Generic401"
        '403':
          $ref: "#/components/responses/Generic403"
        '404':
          $ref: "#/components/responses/Generic404"
        '500':
          $ref: "#/components/responses/Generic500"
        '503':
          $ref: "#/components/responses/Generic503"
components:
  securitySchemes:
    oAuth2ClientCredentials:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: '{tokenUrl}'
          scopes: {}
#    BasicAuth:
#      type: http
#      scheme: basic
#    apiKey:
#      type: apiKey
#      description: API key to authorize requests
#      name: apikey
#      in: query
    three_legged:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://auth.example.com/authorize
          tokenUrl: https://auth.example.com/token
          scopes:
            device-status-roaming-read: Read device roaming status
  schemas:
    RoamingStatusResponse:
      type: object
      required:
        - roaming
      properties:
        roaming:
          $ref: '#/components/schemas/ActiveRoaming'
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        countryName:
          $ref: '#/components/schemas/CountryName'
    ActiveRoaming:
      description: Roaming status. True, if it is roaming
      type: boolean
    UeId:
      description: User equipment identifier
      type: object
      properties:
        externalId:
          $ref: '#/components/schemas/ExternalId'
        msisdn:
          $ref: '#/components/schemas/MSISDN'
        ipv4Addr:
          $ref: '#/components/schemas/Ipv4Addr'
        ipv6Addr:
          $ref: '#/components/schemas/Ipv6Addr'
      minProperties: 1
    ExternalId:
      type: string
      example: '123456789@domain.com'
    MSISDN:
      type: string
      pattern: '^\+?[0-9]{5,15}$'
      example: '123456789'
      description: Subscriber number in E.164 format (starting with country code). Optionally prefixed with '+'.
    Ipv4Addr:
      type: string
      format: ipv4
      pattern: '^([01]?\d\d?|2[0-4]\d|25[0-5])(?:\.(?:[01]?\d\d?|2[0-4]\d|25[0-5])){3}(\/([0-9]|[1-2][0-9]|3[0-2]))?$'
      example: '192.168.0.1/24'
      description: |
        IPv4 address may be specified in form <address/mask> as:
          - address - an IPv4 number in dotted-quad form 1.2.3.4. Only this exact IP number will match the flow control rule.
          - address/mask - an IP number as above with a mask width of the form 1.2.3.4/24.
            In this case, all IP numbers from 1.2.3.0 to 1.2.3.255 will match. The bit width MUST be valid for the IP version.
    Ipv6Addr:
      type: string
      format: ipv6
      allOf:
        - pattern: '^((:|(0?|([1-9a-f][0-9a-f]{0,3}))):)((0?|([1-9a-f][0-9a-f]{0,3})):){0,6}(:|(0?|([1-9a-f][0-9a-f]{0,3})))(\/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))?$'
        - pattern: '^((([^:]+:){7}([^:]+))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?))(\/.+)?$'
      example: '2001:db8:85a3:8d3:1319:8a2e:370:7344'
      description: |
        IPv6 address, following IETF 5952 format, may be specified in form <address/mask> as:
          - address - The /128 subnet is optional for single addresses:
            - 2001:db8:85a3:8d3:1319:8a2e:370:7344
            - 2001:db8:85a3:8d3:1319:8a2e:370:7344/128
          - address/mask - an IP v6 number with a mask:
            - 2001:db8:85a3:8d3::0/64
            - 2001:db8:85a3:8d3::/64
    CountryCode:
      description: The Mobile country code (MCC) as an geographic region identifier for the country and the dependent areas.
      type: integer
    CountryName:
      description: The ISO 3166 ALPHA-2 country-codes of mapped to mobile country code(MCC). If there is mapping of one MCC to multiple countries, then we have list of countries. If there is no mapping of MCC to any country, then ["xx"] will be used.
      type: array
      items:
        type: string
    RequestRoamingStatus:
      type: object
      properties:
        ueId:
          $ref: '#/components/schemas/UeId'
        uePort:
          $ref: '#/components/schemas/Port'
      required:
        - ueId
    Port:
      description: User equipment port. Device port may be required along with IP address to identify the target device
      type: integer
      minimum: 0
      maximum: 65535
      example: 5060
    ErrorInfo:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Code given to this error
        message:
          type: string
          description: Detailed error description
    DeviceStatusEventType:
      description: |
        LOSS_OF_CONNECTIVITY - Device status event triggered when the UE is no longer reachable
        UE_REACHABILITY - Device status event triggered when the UE becomes reachable for sending either SMS or downlink data
        ROAMING_STATUS - Device status event triggered when the UE switch from roaming ON to roaming OFF and conversely 
      type: string
      enum:
        - LOSS_OF_CONNECTIVITY
        - UE_REACHABILITY
        - ROAMING_STATUS
    DeviceStatusEventTypeList:
      description: List of Device Status Event Type
      type: array
      items:
        $ref: '#/components/schemas/DeviceStatusEventType'
      example: [ LOSS_OF_CONNECTIVITY, UE_REACHABILITY, ROAMING_STATUS]
    CreateSubscription:
      description: The request for creating a Device Status Subscription
      type: object
      properties:
        ueId:
          $ref: '#/components/schemas/UeIdList'
        eventType:
          $ref: '#/components/schemas/DeviceStatusEventTypeList'
        notificationUrl:
          type: string
          example: "https://application-server.com"
          description: Allows asynchronous delivery of device status related events
        notificationAuthToken:
          type: string
          example: "c8974e592c2fa383d4a3960714"
          description: Authentification token for callback API
        subscriptionExpireTime:
          type: string
          format: date-time
          example: 2023-01-17T13:18:23.682Z
          description: The subscription expiration time in date-time format.
      required:
        - ueId
        - eventType
        - notificationUrl
        - notificationAuthToken
        - subscriptionExpireTime
    UeIdList:
      description: List of User equipment identifiers
      type: array
      items:
        $ref: '#/components/schemas/UeId'
    SubscriptionInfo:
      description: Represents a device status subscription.
      type: object
      allOf:
        - $ref: '#/components/schemas/CreateSubscription'
        - type: object
          properties:
            subscriptionId:
              $ref: '#/components/schemas/SubscriptionId'
            startedAt:
              type: string
              format: date-time
            expiresAt:
              type: string
              format: date-time
          required:
            - subscriptionId
            - startedAt
            - expiresAt
    SubscriptionId:
      type: string
      description: The subscription identifier.
    EventTime:
      format: date-time
      type: string
      description: The time when the event was notified.
    Notification:
      description: The notification callback.
      type: object
      required:
        - subscriptionId
        - event
        - eventTime
        - ueId
      properties:
        subscriptionId:
          $ref: '#/components/schemas/SubscriptionId'
        ueId:
          $ref: '#/components/schemas/UeId'
        eventType:
          $ref: "#/components/schemas/DeviceStatusEventType"
        eventTime:
          $ref: '#/components/schemas/EventTime'
        eventDetail:
          $ref: '#/components/schemas/EventDetail'
    EventDetail:
      description: A detailed event structure depending on the eventType
      type: object
      oneOf:
        - $ref: '#/components/schemas/LOSS_OF_CONNECTIVITY'
        - $ref: '#/components/schemas/UE_REACHABILITY'  
        - $ref: '#/components/schemas/ROAMING_STATUS'
      discriminator:
        propertyName: 'type'
        mapping:
          LOSS_OF_CONNECTIVITY: '#/components/schemas/LOSS_OF_CONNECTIVITY'
          UE_REACHABILITY: '#/components/schemas/UE_REACHABILITY'
          ROAMING_STATUS: '#/components/schemas/ROAMING_STATUS'
    LOSS_OF_CONNECTIVITY:
      description: Event detail structure for LOSS_OF_CONNECTIVITY event
      type : object
      required:
        - type
      properties:
        type: 
          type: string
    UE_REACHABILITY:
      description: Event detail structure for UE_REACHABILITY event
      type : object
      required:
        - type
        - reachabilityType
      properties:
        type: 
          type: string
        reachabilityType:
          type: string
          description: This parameter is used to identify whether the request is for "Reachability for SMS" or "Reachability for Data"
          enum:
            - SMS
            - DATA
    ROAMING_STATUS:
      description: Event detail structure for ROAMING_STATUS event
      type : object
      required:
        - type
      properties:
        type: 
          type: string
        roaming:
          type: boolean
          description:  Roaming status. True, if it is roaming.
  responses:
    Generic400:
      description: Invalid input
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            code: INVALID_INPUT
            message: "Invalid input"
    Generic401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            code: UNAUTHORIZED
            message: "Authorization failed: ..."
    Generic403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            code: FORBIDDEN
            message: "Operation not allowed: ..."
    Generic404:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            code: NOT_FOUND
            message: "The specified resource is not found"
    Generic409:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            code: CONFLICT
            message: "The specified resource is in a conflict"
    Generic500:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            code: INTERNAL_SERVER_ERROR
            message: "Internal server error"
    Generic503:
      description: Service unavailable
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            code: SERVICE_UNAVAILABLE
            message: "Service unavailable"
  examples:
    LOSS_OF_CONNECTIVITY:
      value:
        type: LOSS_OF_CONNECTIVITY
    UE_REACHABILITY:
      value:
        type: UE_REACHABILITY
        reachabilityType: DATA
    ROAMING_STATUS:
      value:
        type: ROAMING_STATUS
        roaming: true
  
